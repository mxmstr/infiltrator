[gd_scene load_steps=15 format=2]

[ext_resource path="res://Scripts/AnimationTree.StateMachine.gd" type="Script" id=1]
[ext_resource path="res://Scripts/AnimationTree.Animation.gd" type="Script" id=2]
[ext_resource path="res://Scripts/Behavior.StateMachine.gd" type="Script" id=3]
[ext_resource path="res://Scripts/AnimationTree.Transition.Expression.gd" type="Script" id=4]
[ext_resource path="res://Scripts/Behavior.gd" type="Script" id=5]
[ext_resource path="res://Animations/DefaultAnim.tres" type="Animation" id=6]

[sub_resource type="AnimationNodeAnimation" id=1]
animation = "LoadChamber"
script = ExtResource( 2 )
__meta__ = {

}
chain = false
schema = "LoadChamber"

[sub_resource type="AnimationNodeStateMachine" id=2]
script = ExtResource( 3 )
__meta__ = {

}
chain = false
priority = 0
type = 0
blend = 1
cache_pose = true
distance = 0.0
enable_abilities = true
lock_stance = false
lock_speed = false
lock_direction = false
lock_rotation = false
lock_movement = false
camera_mode = "LockYaw"

[sub_resource type="AnimationNodeStateMachineTransition" id=3]
auto_advance = true
disabled = true
script = ExtResource( 4 )
__meta__ = {

}
transition_expression = ""
update_mode = "process"
expression = "true  if get_node(CHAMBER)._is_empty() and not get_node(MAGAZINE)._is_empty() and not get_node(MAGAZINE).items[0].get_node(CONTAINER)._is_empty() else false "
arguments = {
"CHAMBER": "../Chamber",
"CONTAINER": "Container",
"MAGAZINE": "../Magazine"
}
wait_for_frame = 0.0

[sub_resource type="AnimationNodeStateMachineTransition" id=4]
switch_mode = 2
__meta__ = {

}

[sub_resource type="AnimationNodeStateMachine" id=5]
states/LoadChamber/node = SubResource( 1 )
states/LoadChamber/position = Vector2( 0, 0 )
states/Start/node = SubResource( 2 )
states/Start/position = Vector2( 623.453, 162 )
transitions = [ "Start", "LoadChamber", SubResource( 3 ), "LoadChamber", "Start", SubResource( 4 ) ]
start_node = "Start"
graph_offset = Vector2( -277.746, -54.1914 )
script = ExtResource( 1 )
__meta__ = {

}
chain = false

[sub_resource type="AnimationNodeStateMachinePlayback" id=6]
__meta__ = {

}

[sub_resource type="AnimationNodeStateMachinePlayback" id=7]
__meta__ = {

}

[sub_resource type="Animation" id=8]
resource_name = "LoadChamber"
length = 0.001
tracks/0/type = "method"
tracks/0/path = NodePath("../..")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "Meta.CreateLink(self,  get_node(MAGAZINE).items[0].release_front(), CONTAINS, { container: CHAMBER } )", {
"CHAMBER": "Chamber",
"CONTAINS": "Contains",
"MAGAZINE": "Magazine"
} ],
"method": "_evaluate"
} ]
}
__meta__ = {

}

[node name="Behavior" type="AnimationTree"]
tree_root = SubResource( 5 )
anim_player = NodePath("AnimationPlayer")
parameters/playback = SubResource( 6 )
parameters/Start/playback = SubResource( 7 )
script = ExtResource( 5 )
__meta__ = {
"unique": true
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../../Model/SketchUp")
anims/DefaultAnim = ExtResource( 6 )
anims/LoadChamber = SubResource( 8 )
__meta__ = {

}
