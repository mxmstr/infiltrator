[gd_scene load_steps=18 format=2]

[ext_resource path="res://Scripts/AnimationTree.StateMachine.gd" type="Script" id=1]
[ext_resource path="res://Scripts/AnimationTree.Animation.gd" type="Script" id=2]
[ext_resource path="res://Scripts/Input.Transition.gd" type="Script" id=3]
[ext_resource path="res://Scripts/AnimationTree.Transition.Expression.gd" type="Script" id=4]
[ext_resource path="res://Scripts/AnimationTree.gd" type="Script" id=5]
[ext_resource path="res://Animations/DefaultAnim.tres" type="Animation" id=6]

[sub_resource type="AnimationNodeAnimation" id=1]
animation = "DefaultAnim"
script = ExtResource( 2 )
__meta__ = {

}
chain = false
schema = "UseItem"

[sub_resource type="AnimationNodeAnimation" id=2]
animation = "DefaultAnim"
__meta__ = {

}

[sub_resource type="AnimationNodeStateMachineTransition" id=3]
auto_advance = true
disabled = true
script = ExtResource( 3 )
__meta__ = {

}
action = "Primary"
status = 1
strength_multiplier = 1.0

[sub_resource type="AnimationNodeStateMachineTransition" id=4]
auto_advance = true
disabled = true
script = ExtResource( 3 )
__meta__ = {

}
action = "Primary"
status = 0
strength_multiplier = 1.0

[sub_resource type="AnimationNodeStateMachine" id=5]
states/Respawn/node = SubResource( 1 )
states/Respawn/position = Vector2( 718, 138 )
states/Start/node = SubResource( 2 )
states/Start/position = Vector2( 380, 138 )
transitions = [ "Start", "Respawn", SubResource( 3 ), "Respawn", "Start", SubResource( 4 ) ]
start_node = "Start"
script = ExtResource( 1 )
__meta__ = {

}
statemachine = ""
chain = false

[sub_resource type="AnimationNodeAnimation" id=6]
animation = "JumpOrClimb"
__meta__ = {

}

[sub_resource type="AnimationNodeStateMachineTransition" id=7]
auto_advance = true
disabled = true
script = ExtResource( 4 )
__meta__ = {

}
transition_expression = ""
update_mode = "process"
expression = "get_node(STAMINA).hp > 0"
arguments = {
"STAMINA": "../Stamina"
}
delay = 0.0

[sub_resource type="AnimationNodeStateMachineTransition" id=8]
auto_advance = true
disabled = true
script = ExtResource( 4 )
__meta__ = {

}
transition_expression = ""
update_mode = "process"
expression = "get_node(RIGHTHAND)._is_empty()"
arguments = {
"RIGHTHAND": "../RightHandContainer"
}
delay = 0.0

[sub_resource type="AnimationNodeStateMachine" id=9]
states/RespawnInput/node = SubResource( 5 )
states/RespawnInput/position = Vector2( 903, 229 )
states/Start/node = SubResource( 6 )
states/Start/position = Vector2( 510, 229 )
transitions = [ "Start", "RespawnInput", SubResource( 7 ), "RespawnInput", "Start", SubResource( 8 ) ]
start_node = "Start"
graph_offset = Vector2( 113.391, 97.9739 )
script = ExtResource( 1 )
__meta__ = {

}
statemachine = ""
chain = false

[sub_resource type="AnimationNodeStateMachinePlayback" id=10]
__meta__ = {

}

[sub_resource type="AnimationNodeStateMachinePlayback" id=11]
__meta__ = {

}

[node name="RespawnInput" type="AnimationTree"]
tree_root = SubResource( 9 )
anim_player = NodePath("AnimationPlayer")
parameters/playback = SubResource( 10 )
parameters/RespawnInput/playback = SubResource( 11 )
script = ExtResource( 5 )
__meta__ = {

}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/DefaultAnim = ExtResource( 6 )
__meta__ = {

}
